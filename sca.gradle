apply plugin : "checkstyle"
apply plugin : "pmd"
apply plugin : "cpd"
apply plugin : "jdepend"
apply plugin : "findbugs"


cpdCheck{
  ignoreFailures = true
}

pmd {
  ignoreFailures = true
}

checkstyle{
  ignoreFailures = true
}

findbugs{
  ignoreFailures = true
}

jdepend{
  ignoreFailures = true
}

configurations{
  javancss
  classycle
}

dependencies{
  javancss "org.codehaus.javancss:javancss:33:54"
  classycle fileTree( dir :'config/libs', include:'*.jar')
}

task javancss() << {
  description = "execute JavaNCSS tool on project source code"
  group = "Code Quality"
}

def ignoreFailures = true

def reportDir = file("$project.buildDir/reports/javancss")
reportDir.mkdirs()

ant{
  taskdef name: "javancss",
  classname : "javancss.javancssAntTask",
  classpath : configurations.javancss.asPath
  
  javancss srcdir: "src",
  packageMetrics:"yes",
  functionMetrics:"yes",
  abortOnFail : !ignoreFailures,
  generateReport : true,
  outputfile : "$reportDir/javancss.xml",
  format: "xml"
}

ant.xslt(in:"$reportDir/javancss.xml",
  style:"config/javancss/javancss2html.xsl",
  out:"$reportDir/javancss.html",
  classpath: configuration.javancss.asPath)
  
check.dependOn 'javancss'

task classycleAnalyzer << {
  def reportDir = file("$project.buildDir/reports/classycle")
  def configDir = "config/classycle"
  reportDir.mkdirs()
  
  ant{
    taskdef name: 'classcyleAnalyzer',
            classname: 'classycle.ant.ReportTask'
            classpath: configurations.classycle.asPath
            
            classycleAnalyzer(reportFile: "$reportDir/classycle.xml")
            {
              fileset(dir: 'build/classes', include:'**/*.class')
            }
  }
  
  ant.xslt
  
}
